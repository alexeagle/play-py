# Currently bazel-lib is only load()ed when platforms is used.
bazel_dep(name = "aspect_bazel_lib", version = "2.21.1")
bazel_dep(name = "aspect_rules_lint", version = "1.7.0")
bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "rules_multitool", version = "1.9.0")
bazel_dep(name = "bazel_env.bzl", version = "0.5.0")
bazel_dep(name = "bazelrc-preset.bzl", version = "1.3.0")

# We have to take a dependency on rules_python in order to set bootstrap=script
# for transitive dependencies, even if there are no Python rules used in this repo.
# See .bazelrc
bazel_dep(name = "rules_python", version = "1.6.1")
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.6.1")
bazel_dep(name = "aspect_rules_py", version = "1.6.3")
bazel_dep(name = "rules_uv", version = "0.88.0")
bazel_dep(name = "gazelle", version = "0.45.0")
bazel_dep(name = "platforms", version = "1.0.0")

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//tools:tools.lock.json")
use_repo(multitool, "multitool")

#########################
# Hermetic Python interpreter and pip dependencies
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.12",
)

pip.parse(
    hub_name = "pip",
    python_version = "3.12",
    requirements_lock = "//requirements:all.txt",
)
use_repo(pip, "pip")
